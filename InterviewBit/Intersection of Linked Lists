# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param A : head node of linked list
    # @param B : head node of linked list
    # @return the head node in the linked list
    def getIntersectionNode(self, A, B):
        p1 = A
        p2 = B
        len1 = len2 = 0
        while p1:
            len1 += 1
            p1 = p1.next
        while p2:
            len2 += 1
            p2 = p2.next
        if len1 > len2:
            for i in range(len1 - len2):
                A = A.next
        else:
            for i in range(len2 - len1):
                B = B.next
        while A and B:
            if A == B:
                return A
            A = A.next
            B = B.next 
                
            
